# Adapted from Lighthouse: https://github.com/sigp/lighthouse/blob/stable/.github/workflows/release.yml
name: Release

on:
  push:
    tags:
      - v*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  extract-version:
    runs-on: ubuntu-latest
    steps:
      - name: Extract version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" | tee --append "$GITHUB_OUTPUT"
        id: extract_version
    outputs:
      VERSION: ${{ steps.extract_version.outputs.VERSION }}

  draft-release:
    name: draft release
    needs: extract-version
    runs-on: ubuntu-latest
    env:
      VERSION: ${{ needs.extract-version.outputs.VERSION }}
    permissions:
      # Required to post the release
      contents: write
    steps:
      # This is necessary for generating the changelog. It has to come before "Download Artifacts" or else it deletes the artifacts.
      - name: Checkout sources
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # ==============================
      #       Create release draft
      # ==============================
      - name: Generate full changelog
        id: changelog
        run: |
          tee --append "$GITHUB_OUTPUT" << ENDBODY
          CHANGELOG<<EOF
          $(git log --pretty=tformat:"- %s" $(git describe --tags --abbrev=0 ${{ env.VERSION }}^)..${{ env.VERSION }})
          EOF
          ENDBODY

      - name: Create Release Draft
        env:
          GITHUB_USER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        # The formatting here is borrowed from OpenEthereum: https://github.com/openethereum/openethereum/blob/main/.github/workflows/build.yml
        run: |
          tag_name="${{ env.VERSION }}"
          gh release create --verify-tag --draft --notes-file - "$tag_name" << "ENDBODY"
          <Release Name, Version and Time>

          ## Summary

          Add a summary.

          ## All Changes

          ${{ steps.changelog.outputs.CHANGELOG }}
          ENDBODY
